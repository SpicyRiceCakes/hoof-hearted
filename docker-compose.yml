services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: hoof-hearted-db
    environment:
      POSTGRES_DB: ${DB_NAME:-hoof_hearted}
      POSTGRES_USER: ${DB_USER:-hoof_hearted}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-hoof_hearted_dev}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deploy/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-hoof_hearted} -d ${DB_NAME:-hoof_hearted}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - default

  # Flask Backend API
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: hoof-hearted-backend
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-hoof_hearted}:${DB_PASSWORD:-hoof_hearted_dev}@database:5432/${DB_NAME:-hoof_hearted}
      - FLASK_ENV=${FLASK_ENV:-production}
      - FLASK_DEBUG=0
      - SECRET_KEY=${SECRET_KEY:-dev-secret-change-in-production}
      - WEBSOCKET_PORT=5000
      - NVIDIA_VISIBLE_DEVICES=all
    ports:
      - "5001:5000"  # Avoid port 5000 (macOS AirPlay conflict)
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro  # For system monitoring
      - /proc:/host/proc:ro                           # For process monitoring
      - /sys:/host/sys:ro                            # For system stats
    # GPU devices (uncomment on systems with NVIDIA GPUs)
    # devices:
    #   - /dev/nvidia0:/dev/nvidia0                     # GPU access (if available)
    #   - /dev/nvidiactl:/dev/nvidiactl                 # NVIDIA control device
    #   - /dev/nvidia-uvm:/dev/nvidia-uvm               # NVIDIA UVM device
    privileged: false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - default

  # Vue.js Frontend (Nginx)
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    container_name: hoof-hearted-frontend
    ports:
      - "0909:80"  # Korean fart humor port preference (공구공구)
    depends_on:
      - backend
    restart: unless-stopped
    environment:
      - API_URL=http://backend:5000
      - NODE_ENV=production
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - default

  # Optional: Watchtower for automatic updates (disabled by default)
  watchtower:
    image: containrrr/watchtower
    container_name: hoof-hearted-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_SCHEDULE=0 0 4 * * *  # Daily at 4 AM
    restart: unless-stopped
    profiles:
      - watchtower  # Only starts when explicitly enabled
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: hoof-hearted-network